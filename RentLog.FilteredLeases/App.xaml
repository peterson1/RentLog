<Application x:Class="RentLog.FilteredLeases.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:actives="clr-namespace:RentLog.FilteredLeases.FilteredLists.AllActiveLeases"
             xmlns:inactvs="clr-namespace:RentLog.FilteredLeases.FilteredLists.AllInactiveLeases"
             xmlns:withdues="clr-namespace:RentLog.FilteredLeases.FilteredLists.WithBackRentsOrRights"
             xmlns:fullTenant="clr-namespace:RentLog.FilteredLeases.FilteredLists.FullTenantDetails"
             xmlns:birthdays="clr-namespace:RentLog.FilteredLeases.FilteredLists.UpcomingBirthdays"
             xmlns:local="clr-namespace:RentLog.FilteredLeases"
             xmlns:mat="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
             xmlns:cnv="clr-namespace:CommonTools.Lib45.ValueConverters;assembly=CommonTools.Lib45">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />

                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Indigo.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                    <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="{StaticResource Primary100}"/>
                    <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="{StaticResource Primary100Foreground}"/>
                    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource Primary500}"/>
                    <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}"/>
                    <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="{StaticResource Primary700}"/>
                    <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="{StaticResource Primary700Foreground}"/>
                </ResourceDictionary>

                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Yellow.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                    <SolidColorBrush x:Key="SecondaryAccentBrush" Color="{StaticResource Accent200}"/>
                    <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="{StaticResource Accent200Foreground}"/>
                </ResourceDictionary>

                <!-- Include the Dragablz Material Design style -->
                <ResourceDictionary Source="pack://application:,,,/Dragablz;component/Themes/materialdesign.xaml"/>

            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="{x:Type dragablz:TabablzControl}" BasedOn="{StaticResource MaterialDesignTabablzControlStyle}" />

            <Style x:Key="txtBody2" TargetType="TextBlock"
               BasedOn="{StaticResource MaterialDesignBody2TextBlock}">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}" />
                <!--<Setter Property="FontWeight" Value="Medium" />-->
            </Style>

            <Style x:Key="vSplit" TargetType="GridSplitter">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Background" Value="LightGray" />
            </Style>
            <Style x:Key="hSplit" TargetType="GridSplitter">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Background" Value="LightGray" />
            </Style>


            <Style x:Key="colLeft" TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            <Style x:Key="colCenter" TargetType="TextBlock"
                   BasedOn="{StaticResource colLeft}">
                <Setter Property="TextAlignment" Value="Center" />
            </Style>
            <Style x:Key="colRight" TargetType="TextBlock"
                   BasedOn="{StaticResource colLeft}">
                <Setter Property="TextAlignment" Value="Right" />
            </Style>
            <Style x:Key="colRightEnd" TargetType="TextBlock"
                   BasedOn="{StaticResource colRight}">
                <Setter Property="Padding" Value="0 0 10 0" />
            </Style>
            <Style x:Key="colLabel" TargetType="TextBlock"
                   BasedOn="{StaticResource colLeft}">
                <Setter Property="FontWeight" Value="Medium" />
            </Style>
            <Style x:Key="colLabelCenter" TargetType="TextBlock"
                   BasedOn="{StaticResource colLabel}">
                <Setter Property="TextAlignment" Value="Center" />
            </Style>
            <Style x:Key="colSmallWrapLeft" TargetType="TextBlock"
                   BasedOn="{StaticResource colLeft}">
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="FontSize" Value="11" />
            </Style>
            <Style x:Key="colSmallWrapCenter" TargetType="TextBlock"
                   BasedOn="{StaticResource colSmallWrapLeft}">
                <Setter Property="TextAlignment" Value="Center" />
            </Style>
            <Style x:Key="colSmallWrapRightBold" TargetType="TextBlock"
                   BasedOn="{StaticResource colSmallWrapLeft}">
                <Setter Property="FontWeight" Value="Medium" />
                <Setter Property="TextAlignment" Value="Right" />
            </Style>
            <Style x:Key="totalsRow" TargetType="TextBlock"
                   BasedOn="{StaticResource colRight}">
                <Setter Property="FontWeight" Value="Medium" />
            </Style>
            <Style x:Key="totalsRowEnd" TargetType="TextBlock"
                   BasedOn="{StaticResource colRightEnd}">
                <Setter Property="FontWeight" Value="Medium" />
            </Style>
            <Style x:Key="totalsRowLabel" TargetType="TextBlock"
                   BasedOn="{StaticResource colLabel}">
                <Setter Property="TextAlignment" Value="Right" />
                <Setter Property="FontStyle" Value="Italic" />
            </Style>
            <Style x:Key="dgReadOnly" TargetType="DataGrid" 
                   BasedOn="{StaticResource MaterialDesignDataGrid}">
                <Style.Resources>
                    <Style TargetType="DataGridColumnHeader"
                           BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                    </Style>
                </Style.Resources>
                <Setter Property="mat:DataGridAssist.ColumnHeaderPadding" Value="2 4 2 4" />
                <Setter Property="EnableColumnVirtualization" Value="True" />
                <Setter Property="EnableRowVirtualization" Value="True" />
                <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />
                <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
                <Setter Property="AutoGenerateColumns" Value="False" />
                <Setter Property="IsReadOnly" Value="True" />
                <Setter Property="SelectionMode" Value="Single" />
                <Setter Property="mat:DataGridAssist.CellPadding" Value="6 4 6 4" />
            </Style>


            <Style x:Key="dgTotals" TargetType="DataGrid"
                   BasedOn="{StaticResource dgReadOnly}">
                <Setter Property="HeadersVisibility" Value="None" />
                <Setter Property="mat:DataGridAssist.CellPadding" Value="6 6 6 6" />
            </Style>

            <Style x:Key="filterTxtbox" TargetType="TextBox" 
                   BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                <Setter Property="Margin" Value="0 0 5 0" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
            </Style>

            <Style x:Key="zone1" TargetType="mat:ColorZone">
                <Setter Property="Mode" Value="PrimaryMid" />
                <Setter Property="Padding"  Value="25 6 20 6" />
            </Style>
            <Style x:Key="zone2" TargetType="mat:ColorZone">
                <Setter Property="Mode" Value="PrimaryLight" />
                <Setter Property="Padding"  Value="25 6 20 6" />
            </Style>

            <cnv:VisibleIfTrueConverter     x:Key="visIfTrue"     />
            <cnv:VisibleIfNullConverter     x:Key="visIfNull"  />
            <cnv:VisibleIfNotNullConverter  x:Key="visIfNotNull"  />
            <cnv:VisibleIfFalseConverter    x:Key="visIfFalse"    />
            <cnv:VisibleIfNotZeroConverter  x:Key="visIfNotZero"  />
            <cnv:SpanDaysConverter          x:Key="spanDays"      />
            <cnv:UnderscoreToSpaceConverter x:Key="uscoreToSpace" />
            <cnv:DecimalProxyConverter      x:Key="decimalProxy" />

            <DataTemplate DataType="{x:Type actives:AllActiveLeasesVM}">
                <actives:AllActiveLeasesUI />
            </DataTemplate>
            <DataTemplate DataType="{x:Type inactvs:AllInactiveLeasesVM}">
                <inactvs:AllInactiveLeasesUI />
            </DataTemplate>
            <DataTemplate DataType="{x:Type withdues:WithBackRentsOrRightsVM}">
                <actives:AllActiveLeasesUI />
            </DataTemplate>
            <DataTemplate DataType="{x:Type fullTenant:FullTenantDetailsVM}">
                <fullTenant:FullTenantDetailsUI />
            </DataTemplate>
            <DataTemplate DataType="{x:Type birthdays:UpcomingBirthdaysVM}">
                <birthdays:UpcomingBirthdaysUI />
            </DataTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>
